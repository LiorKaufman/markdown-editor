{"version":3,"sources":["initialMarkdown.md","components/Editor-Nav/editor-styles.module.css","components/Editor/Editor.module.css","App.module.css","lib/load-cdn.js","components/Editor-Nav/Editor-Nav.jsx","components/Editor/Editor.js","components/Preview/Preview.js","lib/linkRenderer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","root","container","freeCodeCampCDN","document","createElement","src","body","appendChild","EditorNav","react_default","a","className","styles","htmlFor","href","Editor","_ref","text","handleChange","props","Object","objectWithoutProperties","assign","id","value","onChange","Preview","html","tabIndex","dangerouslySetInnerHTML","Renderer","marked","link","title","string","concat","localStorage","setItem","setOptions","gfm","tables","mangle","langPrefix","highlight","code","hljs","highlightAuto","renderer","linkRenderer","App","state","__html","fetch","initialMarkdown","request","markDown","this","setState","loadData","event","target","_this2","_this$state","Fragment","Editor_Nav","components_Editor_Editor","autoFocus","components_Preview_Preview","Component","rootElement","getElementById","ReactDOM","render","src_App"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+DCCxCH,EAAAC,QAAA,CAAkBG,KAAA,iDCAlBJ,EAAAC,QAAA,CAAkBG,KAAA,0CCAlBJ,EAAAC,QAAA,CAAkBI,UAAA,sGCDlB,IAAMC,EAAkBC,SAASC,cAAc,UAC/CF,EAAgBG,IACd,kEACFF,SAASG,KAAKC,YAAYL,+NCeXM,EAdG,kBAChBC,EAAAC,EAAAN,cAAA,OAAKO,UAAWC,IAAOZ,MACrBS,EAAAC,EAAAN,cAAA,UACEK,EAAAC,EAAAN,cAAA,UACEK,EAAAC,EAAAN,cAAA,SAAOS,QAAQ,UAAf,WAGFJ,EAAAC,EAAAN,cAAA,UACEK,EAAAC,EAAAN,cAAA,KAAGU,KAAK,YAAR,wCCIOC,EAZA,SAAAC,GAAsC,IAAnCC,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,aAAiBC,EAAYC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,yBACnD,OACEP,EAAAC,EAAAN,cAAA,WAAAgB,OAAAE,OAAA,CACEX,UAAWC,IAAOZ,KAClBuB,GAAG,UACCJ,EAHN,CAIEK,MAAOP,EACPQ,SAAUP,MCLDQ,EAJC,SAAAV,GAAA,IAAGW,EAAHX,EAAGW,KAAH,OACdlB,EAAAC,EAAAN,cAAA,OAAKmB,GAAG,UAAUK,SAAS,IAAIC,wBAAyBF,KCDpDG,EAAW,IAAIC,IAAOD,SAE5BA,EAASE,KAAO,SAAClB,EAAMmB,EAAOC,GAG5B,OAFAD,EAAQA,GAAS,GAEjB,qDAAAE,OAA4DrB,EAA5D,aAAAqB,OAA4EF,EAA5E,MAAAE,OAAsFD,EAAtF,SAGaJ,gCCQfM,aAAaC,QAAQ,mBAAoB,sBAEzCN,IAAOO,WAAW,CAChBC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,WAAY,iBACZC,UAAW,SAASC,GAClB,OAAOC,IAAKC,cAAcF,GAAMpB,OAElCuB,SAAUC,QAmDGC,6MA/CbC,MAAQ,CACNjC,KAAM,GACNU,KAAM,CAAEwB,OAAQpB,IAAO,gNAIDqB,MAAMC,mBAAtBC,kBACiBA,EAAQrC,cAAzBsC,SAENC,KAAKC,SAAS,CACZxC,KAAMsC,EACN5B,KAAM,CAAEwB,OAAQpB,IAAOwB,oJAKzBC,KAAKE,gDAGMC,GAAO,IACVnC,EAAUmC,EAAMC,OAAhBpC,MACRgC,KAAKC,SAAS,CACZxC,KAAMO,EACNG,KAAM,CAAEwB,OAAQpB,IAAOP,uCAIlB,IAAAqC,EAAAL,KAAAM,EACgBN,KAAKN,MAApBjC,EADD6C,EACC7C,KAAMU,EADPmC,EACOnC,KAEd,OACElB,EAAAC,EAAAN,cAAAK,EAAAC,EAAAqD,SAAA,KACEtD,EAAAC,EAAAN,cAAC4D,EAAD,MACAvD,EAAAC,EAAAN,cAAA,OAAKO,UAAWC,IAAOX,WACrBQ,EAAAC,EAAAN,cAAC6D,EAAD,CACEhD,KAAMA,EACNC,aAAc,SAAAyC,GAAK,OAAIE,EAAK3C,aAAayC,IACzCO,WAAS,IAGXzD,EAAAC,EAAAN,cAAC+D,EAAD,CAASxC,KAAMA,aAzCPyC,aCzBZC,UAAclE,SAASmE,eAAe,SAC5CC,IAASC,OAAO/D,EAAAC,EAAAN,cAACqE,EAAD,MAASJ","file":"static/js/main.0ff262a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/initialMarkdown.4512f709.md\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"editor-styles_root__3uQCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Editor_root__28UAo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","const freeCodeCampCDN = document.createElement('script')\nfreeCodeCampCDN.src =\n  'https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js'\ndocument.body.appendChild(freeCodeCampCDN)\n","import React from 'react'\n\nimport styles from './editor-styles.module.css'\n\nconst EditorNav = () => (\n  <nav className={styles.root}>\n    <ul>\n      <li>\n        <label htmlFor=\"editor\">Editor</label>\n      </li>\n\n      <li>\n        <a href=\"#preview\">Preview</a>\n      </li>\n    </ul>\n  </nav>\n)\n\nexport default EditorNav\n","import React from 'react'\n\nimport styles from './Editor.module.css'\n\nconst Editor = ({ text, handleChange, ...props }) => {\n  return (\n    <textarea\n      className={styles.root}\n      id=\"editor\"\n      {...props}\n      value={text}\n      onChange={handleChange}\n    />\n  )\n}\n\nexport default Editor\n","import React from 'react'\n\nconst Preview = ({ html }) => (\n  <div id=\"preview\" tabIndex=\"2\" dangerouslySetInnerHTML={html} />\n)\n\nexport default Preview\n","import marked from 'marked'\n\nconst Renderer = new marked.Renderer()\n\nRenderer.link = (href, title, string) => {\n  title = title || ''\n\n  return `<a target=\"_blank\" rel=\"noopener noreferer\" href=\"${href}\" title=\"${title}\">${string}</a>`\n}\n\nexport default Renderer\n","import React, { Component } from 'react'\nimport marked from 'marked'\nimport hljs from 'highlight.js'\n\nimport './styles.css'\nimport 'highlight.js/styles/github.css'\n\nimport initialMarkdown from './initialMarkdown.md'\n\n\nimport EditorNav from './components/Editor-Nav'\nimport Editor from './components/Editor'\nimport Preview from './components/Preview'\nimport linkRenderer from './lib/linkRenderer'\n\nimport styles from './App.module.css'\nimport 'highlight.js/styles/dracula.css'\n\nlocalStorage.setItem('project_selector', 'markdown-previewer')\n\nmarked.setOptions({\n  gfm: true,\n  tables: true,\n  mangle: true,\n  langPrefix: 'hljs langauge-',\n  highlight: function(code) {\n    return hljs.highlightAuto(code).value\n  },\n  renderer: linkRenderer\n})\n\nclass App extends Component {\n  state = {\n    text: '',\n    html: { __html: marked('') }\n  }\n\n  async loadData() {\n    const request = await fetch(initialMarkdown)\n    const markDown = await request.text()\n\n    this.setState({\n      text: markDown,\n      html: { __html: marked(markDown) }\n    })\n  }\n\n  componentDidMount() {\n    this.loadData()\n  }\n\n  handleChange(event) {\n    const { value } = event.target\n    this.setState({\n      text: value,\n      html: { __html: marked(value) }\n    })\n  }\n\n  render() {\n    const { text, html } = this.state\n\n    return (\n      <>\n        <EditorNav />\n        <div className={styles.container}>\n          <Editor\n            text={text}\n            handleChange={event => this.handleChange(event)}\n            autoFocus\n          />\n\n          <Preview html={html} />\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport './lib/load-cdn'\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}